import React from 'react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell } from 'recharts';

const ExploitAnalysis = ({ windowWidth, opponentWeaknesses, getChartHeight }) => {
  // Add null check for opponentWeaknesses
  if (!opponentWeaknesses || !Array.isArray(opponentWeaknesses) || opponentWeaknesses.length === 0) {
    return (
      <div className="card mb-6 animate-fade-in">
        <div className="card-header">
          <h2 className="text-lg md:text-xl font-semibold">Opponent Weakness Analysis</h2>
        </div>
        <div className="card-body">
          <p className="text-sm" style={{ color: 'var(--color-neutral-600)' }}>
            No opponent weakness data available.
          </p>
        </div>
      </div>
    );
  }

  // Adding colors based on value
  const coloredWeaknesses = opponentWeaknesses.map(item => ({
    ...item,
    color: item.value >= 75 ? 'var(--color-success)' : item.value >= 65 ? 'var(--color-warning)' : 'var(--color-error)'
  }));

  return (
    <div className="card mb-6 animate-fade-in">
      <div className="card-header">
        <h2 className="text-lg md:text-xl font-semibold">Opponent Weakness Analysis</h2>
      </div>
      
      <div className="card-body">
        <p className="text-sm mb-4" style={{ color: 'var(--color-neutral-600)' }}>
          Effectiveness of different tactical approaches against the opponent
        </p>
        
        <ResponsiveContainer width="100%" height={getChartHeight(windowWidth, 'small')}>
          <BarChart
            data={coloredWeaknesses}
            margin={{ 
              top: 5, 
              right: windowWidth < 480 ? 10 : (windowWidth < 640 ? 15 : 30), 
              left: windowWidth < 480 ? 5 : (windowWidth < 640 ? 10 : 20), 
              bottom: 5 
            }}
            layout="vertical"
          >
            <CartesianGrid strokeDasharray="3 3" stroke="var(--color-neutral-200)" />
            <XAxis 
              type="number" 
              domain={[0, 100]} 
              tick={{
                fontSize: windowWidth < 480 ? 8 : (windowWidth < 640 ? 10 : 12),
                fill: 'var(--color-neutral-600)'
              }} 
            />
            <YAxis 
              dataKey="name" 
              type="category" 
              tick={{
                fontSize: windowWidth < 480 ? 8 : (windowWidth < 640 ? 10 : 12),
                fill: 'var(--color-neutral-600)'
              }} 
              width={windowWidth < 480 ? 70 : (windowWidth < 640 ? 80 : 120)} 
            />
            <Tooltip 
              formatter={(value) => [`${value}%`, 'Effectiveness']}
              contentStyle={{
                backgroundColor: 'var(--color-neutral-800)',
                border: 'none',
                borderRadius: 'var(--radius)',
                color: 'white'
              }}
            />
            <Legend 
              wrapperStyle={{
                fontSize: windowWidth < 480 ? 8 : (windowWidth < 640 ? 10 : 12),
                color: 'var(--color-neutral-700)'
              }} 
            />
            <Bar 
              dataKey="value" 
              name="Exploitation Potential %" 
              radius={[0, 4, 4, 0]}
            >
              {coloredWeaknesses.map((entry, index) => (
                <Cell key={`cell-${index}`} fill={entry.color} />
              ))}
            </Bar>
          </BarChart>
        </ResponsiveContainer>
      </div>
    </div>
  );
};

export default ExploitAnalysis;
