import React from 'react';
import { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Legend, ResponsiveContainer, Cell } from 'recharts';

const ExploitAnalysis = ({ windowWidth, opponentWeaknesses, getChartHeight }) => {
  // Adding colors based on value
  const coloredWeaknesses = opponentWeaknesses.map(item => ({
    ...item,
    color: item.value >= 75 ? '#4CAF50' : item.value >= 65 ? '#FFC107' : '#F44336'
  }));

  return (
    <div className="bg-white rounded-lg shadow-md p-3 md:p-4 h-full">
      <h2 className="text-base md:text-lg font-semibold mb-2 md:mb-3">Opponent Weakness Analysis</h2>
      <p className="text-xs mb-2">Effectiveness of different tactical approaches against the opponent</p>
      <ResponsiveContainer width="100%" height={getChartHeight(windowWidth, 'small')}>
        <BarChart
          data={coloredWeaknesses}
          margin={{ 
            top: 5, 
            right: windowWidth < 480 ? 10 : (windowWidth < 640 ? 15 : 30), 
            left: windowWidth < 480 ? 5 : (windowWidth < 640 ? 10 : 20), 
            bottom: 5 
          }}
          layout="vertical"
        >
          <CartesianGrid strokeDasharray="3 3" />
          <XAxis 
            type="number" 
            domain={[0, 100]} 
            tick={{fontSize: windowWidth < 480 ? 8 : (windowWidth < 640 ? 10 : 12)}} 
          />
          <YAxis 
            dataKey="name" 
            type="category" 
            tick={{fontSize: windowWidth < 480 ? 8 : (windowWidth < 640 ? 10 : 12)}} 
            width={windowWidth < 480 ? 70 : (windowWidth < 640 ? 80 : 120)} 
          />
          <Tooltip formatter={(value) => [`${value}%`, 'Effectiveness']} />
          <Legend 
            wrapperStyle={{fontSize: windowWidth < 480 ? 8 : (windowWidth < 640 ? 10 : 12)}} 
          />
          <Bar dataKey="value" name="Exploitation Potential %" fill="#FFC107">
            {coloredWeaknesses.map((entry, index) => (
              <Cell key={`cell-${index}`} fill={entry.color} />
            ))}
          </Bar>
        </BarChart>
      </ResponsiveContainer>
    </div>
  );
};

export default ExploitAnalysis;